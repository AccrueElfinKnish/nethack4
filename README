NetHack, experimental dev version

Changes so far:
    - removed support for obsolete systems, OSes, compilers
    - removed all window ports beside tty, to make changing the core easier
    - new build system: cmake. yay!
    - libification: NetHack is now a shared library (libnethack.so) that
	is included by the tty window port binary.
	Other window ports can each have their own binaries (eg. nethack_qt,...)
	libnethack now has a sane, limited and reasonably consistent API. There
	is no more shared global state
    - new option handling that allows for graceful handling of window port
	options. Several options have been moved int the tty port code.
    - new option file locations & formats
	New location: $XDG_CONFIG_HOME/NetHack/ or $HOME/.config/NetHack/
    - automatcally updated config files
	Option changes are written back to the config file
    - introduced "birth options" that may be set before the game starts. They
	replace all options that could previously only be changed by editing the
	config file.
    - converted the ELBERETH, REINCARNATION and SEDUCE compile options to birth options.
    - command input has been changed completely: instead of a moveloop in libnethack,
	looping is now done in the windowing code, which calls nh_do_move
	to perform user commands.
    - drawing (selection of appropriate output char / tile) has been completely
        separated from libnethack and is handled entirely in the window port.
        libnethack uses symbol ids to tell the window port what to display.
    - replay-based save/restore
        the starting state and all moves are now logged during play and can be replayed
	in order to restore a game
    - change level handling
        inactive levels are now kept in memory rather than being written to disk.
	This makes a bunch of locking unnecessary since there is no longer any chance
	of different games trampling each other.

Plans:
    - create an ncurses based window port for tty and delete the current tty code
    - create a qt4-based tile port


Build instructions:
From the top source dir run
    mkdir build
    cd build
    cmake ..
    ccmake . # only necessary if you want to edit the install target paths
    make
    make install # into $HOME/nethack if you didn't change the paths in ccmake
